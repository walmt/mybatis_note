<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
    <!--加载属性文件-->
    <properties resource="properties/db.properties">
        <!--properties中还可以配置一些属性名和属性值-->
        <!--<property name="" value=""/>-->
    </properties>

    <settings>
        <!--打开延迟加载的开关-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <!--将积极加载改为消极加载即按需加载-->
        <setting name="aggressiveLazyLoading" value="false"/>
        <!--开启二级缓存（默认开启）-->
        <setting name="cacheEnabled" value="true"/>
    </settings>

    <!--针对单个别名定义
    type：类型的路径
    alias：别名
    -->
    <typeAliases>
        <!--<typeAlias type="cn.walmt.pojo.User" alias="user"/>-->
        <!--批量别名定义
        指定包名，mybatis自动扫描包中的po类，自动定义别名，别名就是类型（首字母大写或小写都可以）
        -->
        <package name="cn.walmt.pojo"/>
    </typeAliases>

    <!--和Spring整合后environment配置将废除-->
    <environments default="development">
        <environment id="development">
            <!--使用JDBC事务管理,事务控制由mybatis-->
            <transactionManager type="JDBC"/>
            <!--数据库连接池，由mybatis管理-->
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--加载映射文件-->
    <mappers>
        <!--<mapper resource="sqlmap/User.xml"/>-->
        <!--通过resource方法一次加载一个映射文件-->
        <!--<mapper resource="mapper/UserMapper.xml"/>-->

        <!--通过mapper接口加载映射文件
        遵循一些规范：需要将mapper接口类型和mapper.xml映射文件名称保持一致，且在一个目录中
        上边规范的前提是：使用的是mapper代理方法
        -->
        <!--<mapper class="cn.walmt.mapper.UserMapper"/>-->

        <!--批量加载mapper
        指定mapper接口的包名，mybatis自动扫描包下所有mapper接口进行加载
        遵循一些规范：需要将mapper接口类型和mapper.xml映射文件名称保持一致，且在一个目录中
        上边规范的前提是：使用的是mapper代理方法
        -->
        <package name="cn.walmt.mapper"/>
    </mappers>
</configuration>